using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using System;
using System.Threading;
using System.Collections.Generic;
namespace whatsapp_micro_bot
{
    class Program
    {
        static void Main(string[] args) 
        { 
            //Lista de números de possiveis clientes
            List<long> phone_number = new List<long>{556182206508,	556232089282,	556281019784,	556281107378,	556281127039,	556281146499,	556281153186,	556281159095,	556281215919,	556281329022,	556281329537,	556281332757,	556281393020,	556281424865,	556281467131,	556281472917,	556281487008,	556281510762,	556281542042,	556281545627,	556281629785,	556281665668,	556281722341,	556281736575,	556281800400,	556281833150,	556281860848,	556281995937,	556282160773,	556282209623,	556282210144,	556282220069,	556282265005,	556282307384,	556282309741,	556282317102,	556282335561,	556282375858,	556282382743,	556282529336,	556282546514,	556282557662,	556282576867,	556282621407,	556282666436,	556282673056,	556282815478,	556282909202,	556282929957,	556282982298,	556282983833,	556282989435,	556283069105,	556283166261,	556283174690,	556283198903,	556283282449,	556284078442,	556284082080,	556284091566,	556284094336,	556284125778,	556284128270,	556284155643,	556284241516,	556284353138,	556284363044,	556284391627,	556284461516,	556284540631,	556284563867,	556284602883,	556284752144,	556284845236,	556284928251,	556284998569,	556285051747,	556285073691,	556285167060,	556285179880,	556285246121,	556285313600,	556285481321,	556285558925,	556285645634,	556285723773,	556285770263,	556285815937,	556285840261,	556285898533,	556285926565,	556286018425,	556286059913,	556286273098,	556286366483,	556286503615,	556291006867,	556291054751,	556291080905,	556291093923,	556291192660,	556291236260,	556291276751,	556291345791,	556291386476,	556291407839,	556291436334,	556291444811,	556291498072,	556291574574,	556291596419,	556291657588,	556291661671,	556291739571,	556291749998,	556291762168,	556291803129,	556291815687,	556291827549,	556291920620,	556291960550,	556292005886,	556292059647,	556292064709,	556292156400,	556292163807,	556292198779,	556292236161,	556292266799,	556292291613,	556292331630,	556292429517,	556292439926,	556292496165,	556292541344,	556292566324,	556292579699,	556292649792,	556292724624,	556292799090,	556292800236,	556292845532,	556292860555,	556292879937,	556292916161,	556292919244,	556292922902,	556292988615,	556293002363,	556293037678,	556293088069,	556293099329,	556293196893,	556293295897,	556293408440,	556293508049,	556293559176,	556293578321,	556293610109,	556293756186,	556293789703,	556293823272,	556293926914,	556293939444,	556293971499,	556294000875,	556294037368,	556294039697,	556294047816,	556294148503,	556294175485,	556294186360,	556294248227,	556294284568,	556294286918,	556294309997,	556294341716,	556294409180,	556294416443,	556294501890,	556294530064,	556294577515,	556294709901,	556294711673,	556294793988,	556294816525,	556294834365,	556294972910,	556295154827,	556295296435,	556295369110,	556295679756,	556295705592,	556296123840,	556296149481,	556296228848,	556296328589,	556296426622,	556296449077,	556296552021,	556296619963,	556296706828,	556296822127,	556296896601,	556296976734,	556298068966,	556298222503,	556298370076,	556298406438,	556298490832,	556298524310,	556298537381,	556299280123,	556299283325,	556299465313,	556299505374,	556299596798,	556299663040,	556299668102,	556299907695,	556299930082,	556481099989,	556481432933,	556484295338,	556492971560,	556493025789,	556493064104,	556493118511,	556493156366,	556493339760,	556496410851,	556496469019,	556499248478,	556592129785,	559491154542,	556182206508,	556232089282,	556281019784,	556281107378,	556281127039,	556281146499,	556281153186,	556281159095,	556281215919,	556281329022,	556281329537,	556281332757,	556281393020,	556281424865,	556281467131,	556281472917,	556281487008,	556281510762,	556281542042,	556281545627,	556281629785,	556281665668,	556281722341,	556281736575,	556281800400,	556281833150,	556281860848,	556281995937,	556282160773,	556282209623,	556282210144,	556282220069,	556282265005,	556282307384,	556282309741,	556282317102,	556282335561,	556282375858,	556282382743,	556282529336,	556282546514,	556282557662,	556282576867,	556282621407,	556282666436,	556282673056,	556282815478,	556282909202,	556282929957,	556282982298,	556282983833,	556282989435,	556283069105,	556283166261,	556283174690,	556283198903,	556283282449,	556284078442,	556284082080,	556284091566,	556284094336,	556284125778,	556284128270,	556284155643,	556284241516,	556284353138,	556284363044,	556284391627,	556284461516,	556284540631,	556284563867,	556284602883,	556284752144,	556284845236,	556284928251,	556284998569,	556285051747,	556285073691,	556285167060,	556285179880,	556285246121,	556285313600,	556285481321,	556285558925,	556285645634,	556285723773,	556285770263,	556285815937,	556285840261,	556285898533,	556285926565,	556286018425,	556286059913,	556286273098,	556286366483,	556286503615,	556291006867,	556291054751,	556291080905,	556291093923,	556291192660,	556291236260,	556291276751,	556291345791,	556291386476,	556291407839,	556291436334,	556291444811,	556291498072,	556291574574,	556291596419,	556291657588,	556291661671,	556291739571,	556291749998,	556291762168,	556291803129,	556291815687,	556291827549,	556291920620,	556291960550,	556292005886,	556292059647,	556292064709,	556292156400,	556292163807,	556292198779,	556292236161,	556292266799,	556292291613,	556292331630,	556292429517,	556292439926,	556292496165,	556292541344,	556292566324,	556292579699,	556292649792,	556292724624,	556292799090,	556292800236,	556292845532,	556292860555,	556292879937,	556292916161,	556292919244,	556292922902,	556292988615,	556293002363,	556293037678,	556293088069,	556293099329,	556293196893,	556293295897,	556293408440,	556293508049,	556293559176,	556293578321,	556293610109,	556293756186,	556293789703,	556293823272,	556293926914,	556293939444,	556293971499,	556294000875,	556294037368,	556294039697,	556294047816,	556294148503,	556294175485,	556294186360,	556294248227,	556294284568,	556294286918,	556294309997,	556294341716,	556294409180,	556294416443,	556294501890,	556294530064,	556294577515,	556294709901,	556294711673,	556294793988,	556294816525,	556294834365,	556294972910,	556295154827,	556295296435,	556295369110,	556295679756,	556295705592,	556296123840,	556296149481,	556296228848,	556296328589,	556296426622,	556296449077,	556296552021,	556296619963,	556296706828,	556296822127,	556296896601,	556296976734,	556298068966,	556298222503,	556298370076,	556298406438,	556298490832,	556298524310,	556298537381,	556299280123,	556299283325,	556299465313,	556299505374,	556299596798,	556299663040,	556299668102,	556299907695,	556299930082,	556481099989,	556481432933,	556484295338,	556492971560,	556493025789,	556493064104,	556493118511,	556493156366,	556493339760,	556496410851,	556496469019,	556499248478,	556592129785,	559491154542};    

            //Converte a lista para string
            List<string> phone = phone_number.ConvertAll<string>(x => x.ToString());
            //Texto Que será enviado
            string text = "Bom dia! Sou o Eduardo, da Edutec Atacado.%0a%0aTrabalho com iphones lacrados, swap e vitrine.%0a%0a90 dias de garantia.%0a%0aEstamos localizado em Goiania-Go Shopping Plaza doro.%0a%0aMandarei minha lista de aparelhos atuais caso tenha interesse ou alguma duvida estou a disposição!".Replace(" ","%20");
            //loop de espera da resposta
            bool Loop = true;
            
            //Cria a variavel com driver e abre o navegador
            IWebDriver driver = new ChromeDriver();
            
            //Vai para url desejada            
            driver.Navigate().GoToUrl("https://web.whatsapp.com/");Thread.Sleep(10);
            //driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(240);
            Console.WriteLine("Digite 'y' quando estiver logado em seu Whatsapp");
            string yes = Console.ReadLine().ToString();

            while (Loop) 
            { 
                if(yes == "y")
                {
                    foreach(var num in phone){
                        try{
                        enviar(driver,num,text);
                        
                        }catch{Console.WriteLine("Numero {0} Falhou em todos os sentidos!",num);}
                    }
                    Loop=false;
                }
                else {Loop = true;}
            }
            Console.WriteLine("Terminamos todos os números!");
            
        }
         static void enviar(IWebDriver driver,string numero, string mensagem)
        {
            
            string link = "https://web.whatsapp.com/send?phone=" + numero + "&text=" + mensagem;
            
            //Console.WriteLine(link);
            Console.WriteLine("Começando o número {0}",numero);

            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(120);
            driver.Navigate().GoToUrl(link);

            try{
                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(25);
                driver.FindElement(By.XPath("//*[@id=\"main\"]/footer/div[1]/div/span[2]/div/div[2]/div[2]/button/span")).Click();
                //driver.FindElement(By.XPath("/html/body/div[1]/div/span[2]/div/span/div/div/div/div/div/div[2]/div/div")).Click();
            }catch{
                //driver.FindElement(By.XPath("//*[@id=\"main\"]/footer/div[1]/div/span[2]/div/div[2]/div[2]/button/span")).Click();
                driver.FindElement(By.XPath("/html/body/div[1]/div/span[2]/div/span/div/div/div/div/div/div[2]/div/div")).Click();
                Console.WriteLine("O número {0} não tem Whatsapp", numero);
            }    
            
            Thread.Sleep(5000);  
        }
    }
}
